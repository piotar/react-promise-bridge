{
    "name": "@piotar/react-promise-bridge",
    "version": "0.5.0",
    "description": "A library that allows you to easily manage components that ultimately return a value as a `Promise` in `React`.",
    "repository": {
        "type": "git",
        "url": "https://github.com/piotar/react-promise-bridge.git"
    },
    "keywords": [
        "promsie bridge",
        "react dialog",
        "react modal",
        "react popups",
        "react toastr",
        "react messages",
        "react promise bridge",
        "react utils",
        "react promise"
    ],
    "author": "Piotr Tarasiuk",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/piotar/react-promise-bridge/issues"
    },
    "homepage": "https://github.com/piotar/react-promise-bridge",
    "type": "module",
    "files": [
        "dist"
    ],
    "main": "./dist/react-promise-bridge.umd.cjs",
    "module": "./dist/react-promise-bridge.js",
    "types": "./dist/types/",
    "exports": {
        ".": {
            "import": "./dist/react-promise-bridge.js",
            "require": "./dist/react-promise-bridge.umd.cjs"
        }
    },
    "scripts": {
        "dev": "vite",
        "build": "tsc && vite build",
        "test": "vitest run",
        "coverage": "vitest run --coverage",
        "prettier": "prettier --write --ignore-unknown ./src/**/*.{ts,tsx,json}",
        "prepare": "bunx husky",
        "prepublishOnly": "bun run build",
        "type-check": "tsc --noEmit"
    },
    "peerDependencies": {
        "react": ">=16.6.0"
    },
    "devDependencies": {
        "@testing-library/react": "16.3.0",
        "@types/react": "19.1.14",
        "@vitejs/plugin-react": "5.0.4",
        "@vitest/coverage-v8": "3.2.4",
        "husky": "9.1.7",
        "jsdom": "27.0.0",
        "lint-staged": "16.2.3",
        "prettier": "3.6.2",
        "react": "19.1.1",
        "react-dom": "19.1.1",
        "typescript": "5.9.2",
        "vite": "7.1.7",
        "vite-plugin-dts": "4.5.4",
        "vitest": "3.2.4"
    },
    "lint-staged": {
        "**/*.{js,ts,json}": "prettier --write --ignore-unknown"
    }
}
